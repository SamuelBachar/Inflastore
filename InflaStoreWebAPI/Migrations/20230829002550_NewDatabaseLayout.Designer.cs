// <auto-generated />
using System;
using InflaStoreWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InflaStoreWebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230829002550_NewDatabaseLayout")]
    partial class NewDatabaseLayout
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SharedTypesLibrary.Models.API.DatabaseModels.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("ItemPriceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NavigationShopDataId")
                        .HasColumnType("int");

                    b.Property<int>("Region_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemPriceId");

                    b.HasIndex("NavigationShopDataId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("SharedTypesLibrary.Models.API.DatabaseModels.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ItemPriceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Unit_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemPriceId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SharedTypesLibrary.Models.API.DatabaseModels.ItemPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Company_Id")
                        .HasColumnType("int");

                    b.Property<int>("Item_Id")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<float>("PriceDiscount")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("ItemsPrices");
                });

            modelBuilder.Entity("SharedTypesLibrary.Models.API.DatabaseModels.NavigationShopData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Company_Id")
                        .HasColumnType("int");

                    b.Property<string>("FullAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Latitude")
                        .HasColumnType("real");

                    b.Property<float>("Longtitude")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("NavigationShopDatas");
                });

            modelBuilder.Entity("SharedTypesLibrary.Models.API.DatabaseModels.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("SharedTypesLibrary.Models.API.DatabaseModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHashWithSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Region")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("TempResetPasswordHashWithSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SharedTypesLibrary.Models.API.DatabaseModels.Company", b =>
                {
                    b.HasOne("SharedTypesLibrary.Models.API.DatabaseModels.ItemPrice", null)
                        .WithMany("CompaniesLiest")
                        .HasForeignKey("ItemPriceId");

                    b.HasOne("SharedTypesLibrary.Models.API.DatabaseModels.NavigationShopData", null)
                        .WithMany("CompaniesList")
                        .HasForeignKey("NavigationShopDataId");
                });

            modelBuilder.Entity("SharedTypesLibrary.Models.API.DatabaseModels.Item", b =>
                {
                    b.HasOne("SharedTypesLibrary.Models.API.DatabaseModels.ItemPrice", null)
                        .WithMany("ItemList")
                        .HasForeignKey("ItemPriceId");
                });

            modelBuilder.Entity("SharedTypesLibrary.Models.API.DatabaseModels.Unit", b =>
                {
                    b.HasOne("SharedTypesLibrary.Models.API.DatabaseModels.Item", null)
                        .WithMany("UnitList")
                        .HasForeignKey("ItemId");
                });

            modelBuilder.Entity("SharedTypesLibrary.Models.API.DatabaseModels.Item", b =>
                {
                    b.Navigation("UnitList");
                });

            modelBuilder.Entity("SharedTypesLibrary.Models.API.DatabaseModels.ItemPrice", b =>
                {
                    b.Navigation("CompaniesLiest");

                    b.Navigation("ItemList");
                });

            modelBuilder.Entity("SharedTypesLibrary.Models.API.DatabaseModels.NavigationShopData", b =>
                {
                    b.Navigation("CompaniesList");
                });
#pragma warning restore 612, 618
        }
    }
}
